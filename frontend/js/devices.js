// –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
async function loadDevices() {
    try {
        const devices = await apiCall('/smart_house/devices');
        displayDevices(devices);
        if (currentUser) {
            currentUser.devicesCount = devices.length;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤:', error);
        document.getElementById('devicesList').innerHTML =
            '<div class="error-message">‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</div>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function displayDevices(devices) {
    const devicesList = document.getElementById('devicesList');

    if (devices.length === 0) {
        devicesList.innerHTML = `
            <div class="empty-state">
                <h3>üö´ –£—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                <p>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–æ–º</p>
                <button class="btn btn-primary" onclick="showAddDeviceModal()">–î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</button>
            </div>
        `;
        return;
    }

    devicesList.innerHTML = devices.map(device => `
        <div class="device-card ${device.status === 'ON' ? 'on' : 'off'} ${device.mode === 'AUTO' ? 'auto' : ''}">
            <div class="device-header">
                <div class="device-title">${device.name}</div>
                <span class="device-status ${device.status === 'ON' ? 'status-on' : 'status-off'} ${device.mode === 'AUTO' ? 'status-auto' : ''}">
                    ${device.mode === 'AUTO' ? '–ê–í–¢–û' : (device.status === 'ON' ? '–í–ö–õ' : '–í–´–ö–õ')}
                </span>
            </div>
            <div class="device-info">
                <p><strong>–¢–∏–ø:</strong> ${getDeviceTypeName(device.type)}</p>
                <p><strong>–†–µ–∂–∏–º:</strong> ${device.mode === 'AUTO' ? 'ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π' : 'üëã –†—É—á–Ω–æ–π'}</p>
                <p><strong>ID:</strong> ${device.id}</p>
            </div>
            <div class="device-controls">
                <button class="btn btn-success btn-small" onclick="toggleDevice(${device.id}, 'ON')" ${device.status === 'ON' ? 'disabled' : ''}>
                    üîå –í–∫–ª—é—á–∏—Ç—å
                </button>
                <button class="btn btn-danger btn-small" onclick="toggleDevice(${device.id}, 'OFF')" ${device.status === 'OFF' ? 'disabled' : ''}>
                    üîã –í—ã–∫–ª—é—á–∏—Ç—å
                </button>
                <button class="btn btn-warning btn-small" onclick="setAutoMode(${device.id})" ${device.mode === 'AUTO' ? 'disabled' : ''}>
                    ü§ñ –ê–≤—Ç–æ—Ä–µ–∂–∏–º
                </button>
            </div>
        </div>
    `).join('');
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
async function toggleDevice(deviceId, status) {
    try {
        const endpoint = status === 'ON' ? 'on' : 'off';
        await apiCall(`/smart_house/devices/${deviceId}/${endpoint}`, {
            method: 'PATCH'
        });

        await loadDevices(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        showNotification(`‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${status === 'ON' ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º:', error);
        showNotification('‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º', 'error');
    }
}

async function setAutoMode(deviceId) {
    try {
        await apiCall(`/smart_house/devices/${deviceId}/auto`, {
            method: 'PATCH'
        });

        await loadDevices();
        showNotification('‚úÖ –ê–≤—Ç–æ—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–µ–∂–∏–º–∞:', error);
        showNotification('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–µ–∂–∏–º–∞', 'error');
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
document.getElementById('addDeviceForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const originalText = submitBtn.textContent;

    try {
        submitBtn.textContent = '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...';
        submitBtn.disabled = true;

        const deviceData = {
            name: document.getElementById('deviceName').value,
            type: document.getElementById('deviceType').value
        };

        await apiCall('/smart_house/devices', {
            method: 'POST',
            body: JSON.stringify(deviceData)
        });

        hideAddDeviceModal();
        await loadDevices();
        document.getElementById('addDeviceForm').reset();
        showNotification('‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:', error);
        showNotification('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', 'error');
    } finally {
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
    }
});

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function showAddDeviceModal() {
    document.getElementById('addDeviceModal').classList.remove('hidden');
}

function hideAddDeviceModal() {
    document.getElementById('addDeviceModal').classList.add('hidden');
    document.getElementById('addDeviceForm').reset();
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#28a745' : '#dc3545'};
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        z-index: 1001;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 3000);
}